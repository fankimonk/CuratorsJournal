@inject IJSRuntime JSRuntime

<div class="modal-backdrop" style="@BackdropStyle" @onclick="CloseModal">
    <div class="modal-panel" @onclick:stopPropagation="true">
        @if (IsVisible)
        {
            @ChildContent
        }
    </div>
</div>

@code {
    [Parameter] 
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter] 
    public EventCallback OnClose { get; set; }

    private string BackdropStyle => IsVisible ? "display: flex;" : "display: none;";

    private async Task CloseModal() => await OnClose.InvokeAsync();
}

<style>
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

    .modal-panel {
        background: white;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 20px;
        max-width: 500px;
        width: 100%;
        z-index: 1001;
    }

</style>