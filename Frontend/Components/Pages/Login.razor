@page "/login"

@using Contracts.User
@using Frontend.Components.Layout
@using Frontend.Components.Utils
@using Frontend.Services

@layout EmptyLayout

@inject AuthService AuthService
@inject NavigationManager NavigationManager

<div class="container">
    <div class="login-container">
        <h1 class="text-center login-title">Войдите в аккаунт, чтобы продолжить</h1>
        <div class="account-wall">
            <div class="form-signin">
                <EditForm method="post" Model="LoginRequest" OnValidSubmit="TryLogin" OnInvalidSubmit="ShowErrorAlert" FormName="login" Enhance>
                    <DataAnnotationsValidator />
                    <Alert Type="error" IsVisible="_isErrorAlertVisible" OnClose="CloseErrorAlert">
                        <ValidationSummary />
                        @_errorMessage
                    </Alert>
                    <div class="mb-3">
                        <label for="username" class="form-label">Имя пользователя: </label>
                        <InputText id="username" @bind-Value="LoginRequest.Username" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="pswd" class="form-label">Пароль: </label>
                        <InputText type="@(_showPassword ? "text" : "password")" id="pswd" @bind-Value="LoginRequest.Password" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <input type="checkbox" id="showpswd" @bind="_showPassword" />
                        <label for="showpswd" class="form-label">Показать пароль</label>
                    </div>
                    <button class="btn btn-primary" type="submit">Войти</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>



@code {
    private LoginUserRequest LoginRequest = new("", "");

    private bool _isErrorAlertVisible = false;

    private string? _errorMessage = "";

    private bool _showPassword = false;

    private async Task TryLogin()
    {
        var status = await AuthService.Login(LoginRequest.Username, LoginRequest.Password);
        if (status.Status && string.IsNullOrEmpty(status.ErrorMessage))
        {
            NavigationManager.NavigateTo("/");
            LoginRequest = new("", "");
        }
        else
        {
            _errorMessage = status.ErrorMessage;
            ShowErrorAlert();
        }
    }

    private void CloseErrorAlert() 
    {
        _errorMessage = null;
        _isErrorAlertVisible = false;
    }

    private void ShowErrorAlert()
    {
        _isErrorAlertVisible = true;
    }
}

<style>
    body {
        background-color: white;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .login-container {
        width: 500px;
        margin: auto;
        padding: 30px;
        border-radius: 5px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .form-signin {
        max-width: 330px;
        padding: 15px;
        margin: 0 auto;
    }

        .form-signin .form-signin-heading, .form-signin .checkbox {
            margin-bottom: 10px;
        }

        .form-signin .checkbox {
            font-weight: normal;
        }

        .form-signin form-control {
            position: relative;
            font-size: 16px;
            height: auto;
            padding: 10px;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
        }

            .form-signin form-control:focus {
                z-index: 2;
            }

        .form-signin input[type="text"] {
            margin-bottom: -1px;
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
        }

        .form-signin input[type="password"] {
            margin-bottom: 10px;
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
        }

    .account-wall {
        margin-top: 20px;
        padding: 40px 0px 20px 0px;
        background-color: #f7f7f7;
        -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
        -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
        box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
    }

    .login-title {
        color: black;
        font-size: 18px;
        font-weight: bold;
        display: block;
    }

    .profile-img {
        width: 96px;
        height: 96px;
        margin: 0 auto 10px;
        display: block;
        -moz-border-radius: 50%;
        -webkit-border-radius: 50%;
        border-radius: 50%;
    }

    .need-help {
        margin-top: 10px;
    }

    .new-account {
        display: block;
        margin-top: 10px;
    }

</style>