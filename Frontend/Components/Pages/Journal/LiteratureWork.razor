@page "/journal/{journalId:int}/LiteratureWork/{pageId:int}"
@rendermode InteractiveServer

@using Contracts.Journal
@using Contracts.Journal.LiteratureWork
@using Contracts.Literature
@using Contracts.Mappers.Journal
@using Frontend.Services

@inject HttpClient HttpClient
@inject JournalState JournalState

<PageTitle>Работа с научно-методической и педагогической литературой</PageTitle>

<h3 class="d-flex justify-content-center">РАБОТА С НАУЧНО-МЕТОДИЧЕСКОЙ И ПЕДАГОГИЧЕСКОЙ ЛИТЕРАТУРОЙ</h3>
<h3 class="d-flex justify-content-center">по вопросам идеологии и воспитания</h3>

@if (_pageData == null || _literature == null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th class="text-center">Автор, название, библиографические данные</th>
                <th class="text-center">Краткая аннотация</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var record in _pageData.LiteratureWork)
            {
                <tr>
                    <td>
                        <select @bind="record.LiteratureId" @bind:after="async () => await Update(record)" class="input fullwidth">
                            <option value="">(нет)</option>
                            @foreach (var l in _literature)
                            {
                                <option @key="l.Id" value="@l.Id">
                                    @l.Author, "@l.Name", @l.BibliographicData
                                </option>
                            }
                        </select>
                    </td>
                    <td>
                        <input @bind="record.ShortAnnotation" @bind:after='async () => await Update(record)' class="input fullwidth" />
                    </td>
                    <td>
                        <button @onclick="async () => await Delete(record)" class="btn btn-close"/>
                    </td>
                </tr>
            }
           
        </tbody>
    </table>
    <button @onclick="Add" class="btn btn-outline-primary">Добавить строку</button>
}

@code {
    [Parameter]
    public int PageId { get; set; }

    [Parameter]
    public int JournalId { get; set; }

    private LiteratureWorkPageResponse? _pageData;

    private List<LiteratureResponse>? _literature;

    protected override async Task OnInitializedAsync()
    {
        JournalState.SetJournalId(JournalId);

        _pageData = await HttpClient.GetFromJsonAsync<LiteratureWorkPageResponse>("api/journal/literaturework/" + PageId.ToString());
        _literature = await HttpClient.GetFromJsonAsync<List<LiteratureResponse>>("api/literature/");
    }

    private async Task Update(LiteratureWorkRecordResponse record)
    {
        Console.WriteLine("Update literature work");

        var request = record.ToRequest();
        var response = await HttpClient.PutAsJsonAsync<UpdateLiteratureWorkRecordRequest>("api/journal/literaturework/" + record.Id, request);

        if (!response.IsSuccessStatusCode)
        {
            //TODO
        }
    }

    private async Task Add()
    {
        Console.WriteLine("Add literature work");

        var request = new CreateLiteratureWorkRecordRequest(null, null, PageId);
        var response = await HttpClient.PostAsJsonAsync<CreateLiteratureWorkRecordRequest>("api/journal/literaturework", request);

        if (response.IsSuccessStatusCode)
        {
            var addedRecord = await response.Content.ReadFromJsonAsync<LiteratureWorkRecordResponse>();
            _pageData!.LiteratureWork.Add(addedRecord!);
        }
    }

    private async Task Delete(LiteratureWorkRecordResponse record)
    {
        Console.WriteLine("Delete literature work");

        var response = await HttpClient.DeleteAsync("api/journal/literaturework/" + record.Id);

        if (response.IsSuccessStatusCode) _pageData!.LiteratureWork.Remove(record);
    }
}

<style>
    .input {
        border: none;
        outline: none;
        background: transparent;
    }

    .fullwidth {
        width: 100%;
    }
</style>