@page "/"
@rendermode InteractiveServer
@attribute [StreamRendering]

@using Contracts.Journal

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<PageTitle>Журналы</PageTitle>

<h1>Журналы</h1>

@if (_journals == null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Группа</th>
                <th>Куратор</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var journal in _journals)
            {
                <tr @onclick='async () => await OpenJournal(journal.Id)' style="cursor: pointer;">
                    <td>@journal.GroupNumber</td>
                    <td>
                        @if (journal.Curator != null) 
                        {
                            @(
                                            journal.Curator.LastName + ' ' +
                                            journal.Curator.FirstName + ' ' +
                                            journal.Curator.MiddleName
                                         )
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<JournalResponse>? _journals;

    protected override async Task OnInitializedAsync()
    {
        _journals = await HttpClient.GetFromJsonAsync<List<JournalResponse>>("api/journal");
    }

    private async Task OpenJournal(int journalId)
    {
        NavigationManager.NavigateTo($"/journal/{journalId}/title");

        var response = await HttpClient.GetFromJsonAsync<JournalContentsResponse>($"api/journal/{journalId}/contents");
    }

}