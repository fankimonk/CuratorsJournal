@using Contracts.Journal
@using Frontend.Services

@inject JournalState JournalState

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Frontend</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            @if (JournalState.JournalContents != null)
            {
                @foreach (var pt in JournalState.JournalContents.PageTypes)
                {
                    @foreach (var page in pt.Pages!)
                    {
                        var pageUrl = $"/journal/{JournalState.JournalContents.JournalId}/{pt.Name}/{page.Id}";
                        <NavLink class="nav-link" href="@pageUrl" Match="NavLinkMatch.All">
                            @pt.Name
                        </NavLink>
                    }
                }
            }
        </div>
    </nav>
</div>

@code {
    // private Dictionary<int, string> PagesRusNames = new Dictionary<int, string>()
    // {
    //     { 1, "Титульная страница" },
    //     { 2, "Контактные телефоны" },
    //     { 3, "Контактные телефоны" },
    // };

    protected override async Task OnInitializedAsync()
    {
        JournalState.OnInitialize += HandleOnInitialize;
    }

    private void HandleOnInitialize()
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        JournalState.OnInitialize -= HandleOnInitialize;
    }
}