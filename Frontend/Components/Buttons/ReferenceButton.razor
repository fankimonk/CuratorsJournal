@inject NavigationManager NavigationManager

<button type="button" class="btn btn-outline-primary @GetButtonClass()" disabled="@IsDisabled" @onclick="HandleClick">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-journal" viewBox="0 0 16 16">
        <path d="M3 0h10a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-1h1v1a1 1 0 0 0 1 1h10a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H3a1 1 0 0 0-1 1v1H1V2a2 2 0 0 1 2-2"></path>
        <path d="M1 5v-.5a.5.5 0 0 1 1 0V5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0V8h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1zm0 3v-.5a.5.5 0 0 1 1 0v.5h.5a.5.5 0 0 1 0 1h-2a.5.5 0 0 1 0-1z"></path>
    </svg>
    @ChildContent
</button>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public bool IsDisabled { get; set; } = false;

    [Parameter]
    public string Uri { get; set; } = string.Empty;

    [Parameter]
    public ButtonSizes ButtonSize { get; set; } = ButtonSizes.Medium;

    public void HandleClick()
    {
        NavigationManager.NavigateTo(Uri);
    }

    public string GetButtonClass() => ButtonSize == ButtonSizes.Small ? "btn-sm" : 
        ButtonSize == ButtonSizes.Large ? "btn-lg" : "";
}